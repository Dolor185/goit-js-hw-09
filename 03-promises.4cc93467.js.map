{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAqCA,SAASC,EAAcC,EAAUC,IAdjC,SAAuBD,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,KAKLQ,CAAcT,EAAUC,GACrBS,MAAK,SAAAC,G,IAAGC,EAAQD,EAARX,SAAUa,EAAKF,EAALV,MACjBJ,EAAAiB,OAAOC,QACL,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,MAC5C,CACAI,QAAS,IACTC,aAAa,G,IAKlBC,OAAM,SAAAR,G,IAAGC,EAAQD,EAARX,SAAUa,EAAKF,EAALV,MAClBJ,EAAAiB,OAAOM,QAAQ,sBAAqCJ,OAAfJ,EAAS,QAAYI,OAANH,EAAM,MAAK,CAC7DI,QAAS,IACTC,aAAa,G,IAlDLG,SAASC,cAAc,SAE/BC,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAIC,iBAKJ,IAJA,IAAgCC,EAAAF,EAAIG,cAAcC,SAA1C3B,EAAwByB,EAAxBzB,MAAO4B,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OAEjBC,EAAYC,OAAO/B,EAAMgC,OAEpBC,EAAI,EAAGA,GAAKJ,EAAOG,MAAOC,GAAK,EAC5B,IAANA,IAGFH,GAAaC,OAAOH,EAAKI,QAFzBlC,EAAcmC,EAAGH,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Notify } from 'notiflix';\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onStartClick);\n\nfunction onStartClick(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget.elements;\n\n  let delayStep = Number(delay.value);\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    if (i === 1) {\n      resultPromise(i, delayStep);\n    } else {\n      delayStep += Number(step.value);\n\n      resultPromise(i, delayStep);\n    }\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.5;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction resultPromise(position, delay) {\n  createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notify.success(\n        `✅ Fulfilled promise ${position} in ${delay}ms`,\n        {\n          timeout: 4000,\n          backOverlay: true,\n        }\n      );\n      \n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n        timeout: 4000,\n        backOverlay: true,\n      });\n      \n    });"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$resultPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$createPromise","then","param","_$position","_$delay","Notify","success","concat","timeout","backOverlay","catch","failure","document","querySelector","addEventListener","evt","preventDefault","_elements","currentTarget","elements","step","amount","delayStep","Number","value","i"],"version":3,"file":"03-promises.4cc93467.js.map"}